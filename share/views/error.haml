- done = job.done? || job.status == :done
.error.ui.segment.error.message
  %h5.ui.header Error on #{format_name File.basename(job.name)}
  - if job.status == :error
    - if job.messages and job.messages.any?
      %pre.error_message.ui.basic.segment.content
        = CGI.escapeHTML(job.messages[-1] || "")
  - else
    - if done && (dirty_files = job.dirty_files).any?
      %pre.error_message.ui.basic.segment.content
        Job dirty. Dependencies: #{dirty_files.collect{|d| d.path} * ", "}

    - else
      - if ! job.updated?
        %pre.error_message.ui.basic.segment.content
          Job out of date. Dependencies: #{job.out_of_date.collect{|d| d.path} * ", "}
      - else
        %pre.error_message.ui.basic.segment.content
          Unknown Error (status: #{job.status})
    


  - if defined? job.info_file and Open.exists? job.info_file and @uri.include? job.name
    - clean_url = add_GET_param(remove_GET_param(@uri, "_layout"), "_update", "clean")
    %a.ui.button.blue.clean(href=clean_url) Clean
  - else
    - clean_url = add_GET_param(remove_GET_param(@uri, "_layout"), "_update", "reload")
    %a.ui.blue.button.reload(href=clean_url) Reload

  - info_url = @uri.sub(/\?.*/,'') + '/info'
  - if @uri.include? job.name
    %a.ui.blue.button.reload(href=info_url) Info

  - if job.files.any? and @uri.include? job.name
    - files_url = @uri.sub(/\?.*/,'') + '/files'
    %a.ui.blue.button.reload(href=files_url) Files


- backtrace = job.info[:backtrace]
- if backtrace and backtrace.any?

  .error_backtrace.clean_list.ui.segment
    .ui.header Backtrace
    %pre.ui.content
      - require 'rbbt/util/colorize'
      - pallete = {}
      - matches = %w(views workflows rbbt).collect{|w| /\/#{w}/ }
      - colors = Colorize.distinct(matches)
      %ul
        - backtrace.each do |line|
          - color = nil
          - matches.each_with_index do |m,i|
            - if m.match(line)
              - color = colors[i].darken(0.3).to_s 
              - break

          - style = color ? ';color:'+color : ""
          %li(style="font-size:0.9em;font-family:monospace#{style}")= line.sub('`',"'")
