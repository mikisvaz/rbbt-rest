- list = card.list
- list_id = card.list_id
.entity_list_card(id="#{ list_id.gsub(/\s/,'_') }_card")

  .title
    .name
      = list.base_type
      List
    .long_name
      = list_id


  .card
    .sidebar.offcanvas
      .meta
        .list_management

          %ul

            %li
              %a.compare_list(href="#") Compare

        .entity_info
          - info = list.info.dup
          - info.delete :annotated_array
          - info.delete :annotation_types
          = hash2dl(info)
        - case card.meta
        - when nil
        - when Hash
          = hash2dl(card.meta)
        - when Proc
          = capture_haml &card.meta 

        .entities
          - if (defined? force and force) or list.length < 500
            %ul.entity_list
              - list.link.each do |link|
                %li= link
          - else
            %p To many entities to list

        - if card.list_container
          .entity_lists
            = list_container_render(card.list_container)

    .content
      .description
        - case card.description
        - when nil
          - if list.length == list.uniq.length
            %p== #{ list.length } elements
          - else
            %p== #{ list.length } elements (#{list.uniq.length} unique)
        - when String
          %p= card.description
        - when Proc
          = capture_haml &card.description

      - if card.action_controller
        .actions
          = action_controller_render(card.action_controller)

