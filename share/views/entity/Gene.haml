- entity_card = EntityCard.new(entity)

- entity_card.description do
  = fragment do 
    = entity.description


- entity_card.long_name do
  = fragment do 
    = entity.long_name

- entity_card.meta do
  = fragment do 
    %dl
      %dt Gene in Ensembl: 
      %dd
        %a(href="http://#{Misc.ensembl_server(entity.organism)}/Homo_sapiens/Gene/Summary?g=#{entity.to "Ensembl Gene ID"}")= entity.to "Ensembl Gene ID"
      %dt Gene in Entrez:
      %dd
        %a(href="http://www.ncbi.nlm.nih.gov/gene/#{entity.to "Entrez Gene ID"}")= entity.to "Entrez Gene ID"
      %dl
        %dt Strand
        %dd= entity.strand == "1" ? "Forward (Watson) Strand" : "Reverse (Crick) Strand"

        %dt Exon bases
        %dd
          - bases = Gene.gene_list_exon_bases(entity.make_list)
          - if bases == 0
            Could not determine the exome size of this gene
          - else
            = bases

        %dt Isoforms (# aa; # PDBs)
        %dd
          - if entity.transcripts and entity.transcripts.any?
            = entity.transcripts.protein.compact.reject{|protein| protein.empty?}.collect{|protein| [protein, protein.pdbs || []]}.sort{|a,b| (d = a[1].length <=> b[1].length) == 0 ? (a[0].sequence || "").length <=> (b[0].sequence || "").length : d}.reverse.collect{|protein,pdbs| "#{protein.link} (#{(protein.sequence || "").length}; #{pdbs.length})" } * ", "
          - else
            No transcript found for this gene


- list_container = ListContainer.new

- list_container.add "PINA Interactors for #{entity.name}", entity.pina_interactors
- list_container.add "String Interactors for #{entity.name}", entity.string_interactors
- list_container.add "Transcription Targets for #{entity.name}", entity.transcription_targets
- list_container.add "Transcription Regulators for #{entity.name}", entity.transcription_regulators
- list_container.add "Kegg Pathways for #{entity.name}", entity.to_kegg.kegg_pathways
- list_container.add "GO BP Terms for #{entity.name}", entity.go_bp_terms
- list_container.add "GO CC Terms for #{entity.name}", entity.go_cc_terms
- list_container.add "GO MF Terms for #{entity.name}", entity.go_mf_terms
- list_container.add "Pfam Domains for #{entity.name}", entity.pfam_domains 
- list_container.add "InterPro Domains for #{entity.name}", InterProDomain.setup(entity.proteins.interpro_domains.compact.flatten, entity.organism) if entity.proteins.any?

- entity_card.list_container = list_container

- action_controller = ActionController.new(entity)
- action_controller.add :gene_in_study, "Gene in study"

- entity_card.action_controller = action_controller

= entity_card_render entity_card

