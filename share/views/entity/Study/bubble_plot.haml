- action_card = ActionCard.new
= action_card_render action_card do
  - matrix = entity.gene_sample_matrix
  - matrix.add_field "Associated Gene Name" do |gene, values|
    - gene.name

  - matrix = matrix.reorder "Associated Gene Name"
  - matrix = matrix.slice(matrix.fields - ["Ensembl Gene ID"])

  - bedfile = entity.dir.data["kinome-bed.tsv"]
  - if true or not bedfile.exists?
    - bedfile = @step.file("bedfile")
    - bed_tsv = exome_bed_file_for_genes(matrix.keys.name)
    - Open.write(bedfile) do |file|
      - file.puts bed_tsv.fields * "\t"
      - bed_tsv.each do |key, values|
        - file.puts [key].concat(values) * "\t"

  - variants_file = @step.file('variants')
  - Open.write(variants_file) do |file|
    - file.puts %w(gene pos sample) * "\t"
    - relevant_mutations = entity.relevant_mutations
    - entity.cohort.each do |genotype|
      - sample = genotype.jobname
      - mutations = genotype.subset(relevant_mutations)
      - mutations.each do |mutation|
        - mutation.affected_genes.each do |gene|
          - file.puts [gene.name, mutation.position, sample] * "\t"
 
  = resource("Bubble plot for #{ entity }.png", nil, :image) do |filename| 
    - out = File.dirname(filename)
    - file = File.basename(filename)
    - script =  "source('#{Rbbt.share.find(:lib).R["MM.identify.mutated.genes.binom.R"]}');\n"
    - script << "source('#{Rbbt.share.find(:lib).R["MM.assess.mutation.patterns.in.gene.R"]}');\n"
    - script << "source('#{Rbbt.share.find(:lib).R["MM.generate.bubble.plot.R"]}');\n"

    - script << "library(gplots);\n"

    - script << "m = as.matrix(t(data));\n m[is.na(m)] = FALSE;\n"

    - script << "variants = read.table('#{variants_file}', as.is=T, sep='\\t', header=T);\n"
    - script << "bed = get.sizes.from.BED('#{bedfile}');\n"
    - script << "bin = run.identification.signif.genes(m, bed);\n"
    - script << "patterns = get.variant.pattern(variants);\n"
    - script << "variants = subset(variants, gene %in% bin$gene);\n"
    - script << "data = generate.bubble.plot(out='#{ out }', file='#{ file }', m=m, bin=bin, patterns = patterns);\n"

    - matrix.R(script)

     
