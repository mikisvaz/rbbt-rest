- new_info = {}
- info.each{|k,v| new_info[k] = v unless k.to_s == 'dependencies'}
= hash2dl(new_info)

- if info[:dependencies] and info[:dependencies].any?
  %h3 Dependencies
  = partial_render('partials/dependencies', :job => job)
  -#%ul

    - task_exports = workflow.synchronous_exports + workflow.asynchronous_exports
    - task_exports = task_exports.collect{|t| t.to_s}
    -# info[:dependencies].each do |task,name,path|
      - dep = Step.new path
      - d_workflow = dep.workflow || "Unknown Workflow"
      - wf = workflow if d_workflow.nil? || d_workflow.to_s == workflow.to_s
      - if wf.nil? and d_workflow
        - wf ||= begin
          - Kernel.const_get d_workflow
          - rescue

      %li
        (#{d_workflow}##{task}) 
        - if Open.remote? path
          - url = path.split("?").first
          %a(href=url) #{ name }  
        - elsif wf and wf.task_exports.include? task
          - url = "/" + [d_workflow.to_s, task.to_s, name.to_s] * "/"
          %a(href=url) #{ name }  
        - else
          = name 
