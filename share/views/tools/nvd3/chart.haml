- resolution = 1
- data_id = "data-" << id
- Open.write(@step.file(data_id), plot_data.to_json)
- x_label = nil unless defined? x_label
- y_label = nil unless defined? y_label

- extra = "" unless defined? extra

- url = @uri

%svg.nvd3(id=id)

:ruby
  setup ||=<<-EOF
    var graph = nv.models.discreteBarChart()
        .x(function(d) { return d.label })
        .y(function(d) { return d.value })
        .staggerLabels(true)
        .showValues(true)

        graph.tooltip.enabled(true)
  EOF

  setup += "\ngraph.xAxis.axisLabel('#{x_label}')" if x_label
  setup += "\ngraph.yAxis.axisLabel('#{y_label}')" if y_label

:javascript
  

  defer(function(){

    var id = '#{id}';
    var selector = "svg#" + id
    var uri = add_parameter(rbbt.url_add_script_name('#{url}'), '_file', '#{data_id}')


    var resolution = #{resolution}
    var svg = $(selector)
    var figure = svg.parent('.figure')
    var W = figure.innerWidth()
    var H = figure.innerHeight()

    $(selector).css('height', H).css('width', W)

    nv.addGraph({
      generate: function(){
        #{setup}

        #{extra}

        $.get(uri, function(data){
          var json = JSON.parse(data)
          console.log(json)

          d3.select(selector)
            .datum(json)
            .call(graph);
        })

        nv.utils.windowResize(graph.update);

        graph.update
        return graph;
      },
    })

  })




